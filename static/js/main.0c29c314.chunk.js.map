{"version":3,"sources":["Helpers/api.js","Redux/Actions/loadEmployeesAction.js","Components/EmployeesCard.js","Components/NoData.js","Components/EmployeesBirthday.js","Redux/index.js","Redux/Reducers/loadEmployeesReducer.js","Components/Spinner.js","Home.js","App.js","index.js"],"names":["apiRequest","a","console","log","fetch","response","json","preparedListOfEmployees","map","item","isChaked","LOAD_EMPLOYEES","IS_CHEKED_EMPLOYEE","loadEployeesData","data","type","EmployeesCard","listOfalphabetic","employees","Checked","className","filtered","filter","name","lastName","toUpperCase","length","htmlFor","id","firstName","onChange","checked","onClick","NoData","title","EmployeesBirthday","month","i","filteredEmployees","Date","dob","slice","getMonth","sort","b","rootReducer","combineReducers","empoyees","state","action","getEmployees","store","createStore","subscribe","localStorage","setItem","JSON","stringify","getState","Spinner","Home","dispath","useDispatch","useSelector","useEffect","getItem","parse","then","isChekedEmployee","find","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c29c314.chunk.js","sourcesContent":["const apiRequest = async () => {\n    console.log(\"apiRequest\")\n    const response = await fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n    const json = await response.json()\n\n    const preparedListOfEmployees = json.map(item => ({\n        ...item,\n        isChaked: false,\n    }))\n    console.log(preparedListOfEmployees)\n    return preparedListOfEmployees\n}\n\nexport default apiRequest","export const LOAD_EMPLOYEES = \"LOAD_EMPLOYEES\";\nexport const IS_CHEKED_EMPLOYEE = \"IS_CHEKED_EMPLOYEE\";\n\nexport const loadEployeesData = (data) => {\n  console.log(\"ACtion\");\n  console.log(data);\n  return {\n    type: LOAD_EMPLOYEES,\n    data,\n  };\n};\n\nexport const isChekedEmployee = (id) => {\n  console.log(\"isChekedEmployeeACtion\");\n  console.log(id);\n  return {\n    type: IS_CHEKED_EMPLOYEE,\n    id,\n  };\n};\n","import React from \"react\";\n\nfunction EmployeesCard({ listOfalphabetic, employees, Checked }) {\n  return (\n    <section className=\"employees \">\n      <h1 className=\"employees__h1\">Employees</h1>\n      <div className=\"employees__list\">\n        {listOfalphabetic.map((item) => {\n          let filtered = employees.filter(\n            (name) => name.lastName[0] === item.toUpperCase()\n          );\n          return (\n            <div key={item.id} className=\"employees__list__card\">\n              <h1 className=\"employees__list__card--h1\">\n                {item.toUpperCase()}\n              </h1>\n              {filtered.length === 0 ? (\n                <div>\n                  <label htmlFor={item.id}>---</label>\n                </div>\n              ) : (\n                filtered.map((item) => (\n                  <>\n                    <div key={item.id} className=\"employees__list__box\">\n                      <label htmlFor={item.id}>\n                        {item.lastName + \" \" + item.firstName}\n                      </label>\n                      {item.isChaked === true ? (\n                        <div className=\"employees__list__box__container\">\n                          <span className=\"employees__list__box__checked\"></span>\n                          <input\n                            type=\"checkbox\"\n                            className=\"employees__list__box__input\"\n                            id={item.id}\n                            onChange={() => Checked(item.id)}\n                            checked\n                          ></input>\n                        </div>\n                      ) : (\n                        <input\n                          type=\"checkbox\"\n                          className=\"employees__list__box__input\"\n                          id={item.id}\n                          onClick={() => Checked(item.id)}\n                        ></input>\n                      )}\n                    </div>\n                  </>\n                ))\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default EmployeesCard;\n","import React from \"react\";\n\nconst NoData = ({ title }) => {\n  return <div>{title}</div>;\n};\n\nexport default NoData;\n","import React from \"react\";\nimport NoData from \"./NoData\";\nfunction EmployeesBirthday({ employees, month }) {\n  if(!employees) {\n    return <NoData title=\"No selected employees\"/>\n  }\n  return (\n    <section className=\"employeesbirthday\">\n      <div className=\"employeesbirthday__box\">\n        <h1 className=\"employeesbirthday__box__h1\">Employees Birthday</h1>\n      </div>\n      <div className=\"employeesbirthday__list\">\n        {month.map((item, i) => {\n          let filteredEmployees = employees\n            .filter(\n              (item) =>\n                item.isChaked === true &&\n                new Date(item.dob.slice(0, 10)).getMonth() === i\n            )\n            .sort((a, b) => new Date(a.dob) - new Date(b.dob));\n          return (\n            <ul key={item.id}>\n              {filteredEmployees.length >= 1 && (\n                <h1 className=\"employeesbirthday__list--year--titile\">\n                  {item}\n                </h1>\n              )}\n              {filteredEmployees.map((item) => (\n                <li className=\"employeesbirthday__list__li\">{`${\n                  item.lastName\n                } ${item.firstName} - ${item.dob.slice(5, 7)} ${\n                  month[i]\n                }, ${item.dob.slice(0, 4)} year`}</li>\n              ))}\n            </ul>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default EmployeesBirthday;\n","import { createStore, combineReducers } from \"redux\";\nimport { employeesReducer } from \"./Reducers/loadEmployeesReducer\";\n\nconst rootReducer = combineReducers({\n  empoyees: employeesReducer,\n});\n\n///Selectors\nexport const getEmployees = (state) => state.empoyees;\n\nconst store = createStore(rootReducer);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"data\", JSON.stringify(store.getState().empoyees));\n});\n\nexport default store;\n","import {\n  IS_CHEKED_EMPLOYEE,\n  LOAD_EMPLOYEES,\n} from \"../Actions/loadEmployeesAction\";\n\nexport const employeesReducer = (\n  state = [],\n  action\n) => {\n  console.log(\"employeesReducerREDUCER\");\n  console.log(action);\n  console.log(state);\n  switch (action.type) {\n    case LOAD_EMPLOYEES:\n      return action.data\n    case IS_CHEKED_EMPLOYEE:\n      return [...state].map((item) => {\n        if (item.id === action.id) {\n          return {\n            ...item,\n            isChaked: !item.isChaked,\n          };\n        }\n        return item;\n      });\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst Spinner = () => {\n  return <div>Loadnig....</div>;\n};\n\nexport default Spinner;\n","import React, { useEffect } from \"react\";\nimport apiRequest from \"./Helpers/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport {\n  isChekedEmployee,\n  loadEployeesData,\n} from \"./Redux/Actions/loadEmployeesAction\";\nimport EmployeesCard from \"./Components/EmployeesCard\";\nimport EmployeesBirthday from \"./Components/EmployeesBirthday\";\nimport { getEmployees } from \"./Redux\";\nimport Spinner from \"./Components/Spinner\";\n\nconst listOfalphabetic = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nconst month = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst Home = () => {\n  const dispath = useDispatch();\n  const employees = useSelector(getEmployees);\n\n  useEffect(() => {\n    localStorage.getItem(\"data\")\n      ? dispath(loadEployeesData(JSON.parse(localStorage.getItem(\"data\"))))\n      : apiRequest().then((response) => dispath(loadEployeesData(response)));\n  }, []);\n\n  const Checked = (id) => {\n    dispath(isChekedEmployee(id));\n  };\n  return (\n    <>\n      {employees.length < 1 ? (\n        <Spinner />\n      ) : (\n        <>\n          <EmployeesCard\n            listOfalphabetic={listOfalphabetic}\n            employees={employees}\n            Checked={Checked}\n          />\n          <EmployeesBirthday\n            employees={\n              [...employees].find((item) => item.isChaked === true) && employees\n            }\n            month={month}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import \"./App.scss\";\nimport React from \"react\";\n\nimport Home from \"./Home\";\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <main className=\"main\">\n          <Home />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Redux/index';\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}